server:
  port: 9085
  servlet:
    context-path: /business

spring:
  application:
    name: business
  profiles:
    active: dev
  datasource:
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    #Spring Boot 默认是不注入这些属性值的，需要自己绑定
    #druid 数据源专有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错 java.lang.ClassNotFoundException:org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  mybatis-plus:
    configuration:
      map-underscore-to-camel-case: true   #是否开启驼峰命名
      log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

  logging:
    level:
      com.baomidou.mybatisplus.samples.quickstart: debug

  cloud:
    nacos:
      discovery:
        #注册中心地址
        username: nacos
        password: nacos
      config:
        #命名空间
        namespace: ${spring.profiles.active}
        username: nacos
        password: nacos
        file-extension: yaml


mybatis-plus:
  mapper-locations: classpath:mapper/*.xml

seata:
  tx-service-group: business-tx-group
  service:
    vgroupMapping:
      business-tx-group: default
  config:
    type: nacos
    nacos:
      group: SEATA_GROUP
      username: ${spring.cloud.nacos.config.username}
      password: ${spring.cloud.nacos.config.password}
  registry:
    type: nacos
    nacos:
      group: SEATA_GROUP
      username: ${spring.cloud.nacos.discovery.username}
      password: ${spring.cloud.nacos.discovery.password}